"""Type stubs for websockets.client module."""

from typing import Optional, Union, AsyncIterator
import json

class ConnectionClosed(Exception):
    code: int
    reason: str
    def __init__(self, code: int, reason: str) -> None: ...

class PingResponse:
    def __await__(self) -> object: ...

class WebSocketClientProtocol:
    async def send(self, data: Union[str, bytes]) -> None: ...
    async def recv(self) -> str: ...
    async def close(self, code: Optional[int] = None, reason: str = "") -> None: ...
    async def ping(self, data: Optional[bytes] = None) -> PingResponse: ...
    async def pong(self, data: bytes = b"") -> None: ...
    async def __aenter__(self) -> "WebSocketClientProtocol": ...
    async def __aexit__(
        self, exc_type: object, exc_val: object, exc_tb: object
    ) -> None: ...
    @property
    def closed(self) -> bool: ...
    @property
    def open(self) -> bool: ...
