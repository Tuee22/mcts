{
  "_description": "Claude Code loop-safe workflow configuration. Quality gate (Black → mypy → tests) runs ONCE on Stop hook. Prevents infinite loops with stop_hook_active awareness. Git commits blocked until user explicitly confirms. Override: set MCTS_ALLOW_COMMIT=1 to bypass.",
  "permissions": {
    "tool_permissions": {
      "Bash": {
        "allowed_commands": [
          "cd", "ls", "pwd", "find", "grep", "cat", "head", "tail",
          "docker", "docker-compose", "docker compose",
          "python", "python3", "pip", "poetry",
          "black", "mypy", "pytest", "flake8", "isort",
          "git status", "git add", "git diff", "git log", "git show",
          "scons", "make", "cmake",
          "which", "whoami", "ps", "kill"
        ],
        "blocked_commands": [
          "git commit", "git push", "git pull", "git fetch",
          "rm -rf", "sudo", "su", "chmod 777", "chown",
          "curl", "wget", "ssh", "scp", "rsync"
        ]
      },
      "WebFetch": "prompt_user",
      "WebSearch": "allow"
    },
    "file_permissions": {
      "read_allowed": true,
      "write_allowed": true,
      "sensitive_paths": [
        "/etc/", "/usr/", "/var/", "/home/", "/root/",
        "~/.ssh/", "~/.aws/", "~/.config/",
        "/Users/*/.*", "**/id_rsa*", "**/*_key*"
      ]
    }
  },
  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "cd $CLAUDE_PROJECT_DIR/docker && { docker info >/dev/null 2>&1 || { echo '❌ Docker not running' >&2; exit 1; }; } && { docker compose ps mcts --format json 2>/dev/null | grep -q '\"State\":\"running\"' || docker compose up -d mcts; } && echo '✅ Container ready'"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/git-commit-guard.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Task",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/cleanup-temp-files.py"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command", 
            "command": "$CLAUDE_PROJECT_DIR/.claude/hooks/cleanup-temp-files.py"
          }
        ]
      }
    ]
  }
}