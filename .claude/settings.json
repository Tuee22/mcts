{
  "_description": "Claude Code automated quality gate configuration - format, type check, build, test after every change. Git commits blocked until checks pass and user explicitly confirms. Temporary override for commits: set MCTS_ALLOW_COMMIT=1 to bypass quality gates in emergencies.",
  "hooks": {
    "SessionStart": [
      {
        "type": "command",
        "command": "cd \"$(dirname \"$0\")/../../docker\" && { docker info >/dev/null 2>&1 || { echo '❌ Docker not running' >&2; exit 1; }; } && { docker compose ps mcts --format json 2>/dev/null | grep -q '\"State\":\"running\"' || docker compose up -d mcts; } && echo '✅ Container ready'"
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Bash",
        "type": "command",
        "command": "python \"$CLAUDE_PROJECT_DIR/.claude/hooks/git-commit-guard.py\""
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "type": "command",
        "command": "cd \"$CLAUDE_PROJECT_DIR/docker\" && docker compose exec -T mcts black . 2>/dev/null || true",
        "timeout": 30
      }
    ],
    "Stop": [
      {
        "type": "command",
        "command": "cd \"$CLAUDE_PROJECT_DIR/docker\" && docker compose exec -T mcts python /app/.claude/hooks/quality-gate.py",
        "timeout": 600
      }
    ]
  }
}